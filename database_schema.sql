-- ATIP Database Schema

-- Threats table - Stores all collected threat intelligence
CREATE TABLE IF NOT EXISTS threats (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    threat_type TEXT NOT NULL,  -- e.g., malicious_ip, phishing_url, etc.
    indicator TEXT NOT NULL,    -- The actual threat indicator (IP, URL, hash, etc.)
    source TEXT NOT NULL,       -- Source of the intelligence
    severity INTEGER NOT NULL,  -- 1-10 scale with 10 being most severe
    confidence INTEGER NOT NULL, -- 1-10 scale with 10 being highest confidence
    description TEXT,           -- Description of the threat
    metadata TEXT,              -- Additional metadata as JSON
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create index on common query fields
CREATE INDEX IF NOT EXISTS idx_threats_type ON threats(threat_type);
CREATE INDEX IF NOT EXISTS idx_threats_severity ON threats(severity);
CREATE INDEX IF NOT EXISTS idx_threats_source ON threats(source);
CREATE INDEX IF NOT EXISTS idx_threats_timestamp ON threats(timestamp);

-- Alerts table - Stores alerts generated by the system
CREATE TABLE IF NOT EXISTS alerts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    alert_type TEXT NOT NULL,   -- e.g., new_threat, threshold_exceeded, etc.
    severity INTEGER NOT NULL,  -- 1-10 scale
    title TEXT NOT NULL,        -- Short title for the alert
    description TEXT NOT NULL,  -- Detailed description
    related_threats TEXT,       -- JSON array of related threat IDs
    status TEXT DEFAULT 'new',  -- new, acknowledged, resolved
    acknowledged_by TEXT,       -- User who acknowledged the alert
    acknowledged_at DATETIME,
    resolved_by TEXT,           -- User who resolved the alert
    resolved_at DATETIME,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create index on common query fields
CREATE INDEX IF NOT EXISTS idx_alerts_type ON alerts(alert_type);
CREATE INDEX IF NOT EXISTS idx_alerts_severity ON alerts(severity);
CREATE INDEX IF NOT EXISTS idx_alerts_status ON alerts(status);
CREATE INDEX IF NOT EXISTS idx_alerts_timestamp ON alerts(timestamp);

-- Actions table - Stores automated or manual actions taken
CREATE TABLE IF NOT EXISTS actions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    action_type TEXT NOT NULL,  -- e.g., block_ip, update_firewall, etc.
    target TEXT NOT NULL,       -- Target of the action (IP, URL, etc.)
    status TEXT NOT NULL,       -- success, failure
    details TEXT,               -- Additional details or error message
    triggered_by TEXT NOT NULL, -- 'auto' or username
    related_threat_id INTEGER,  -- Related threat ID if applicable
    related_alert_id INTEGER,   -- Related alert ID if applicable
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (related_threat_id) REFERENCES threats(id),
    FOREIGN KEY (related_alert_id) REFERENCES alerts(id)
);

-- Create index on common query fields
CREATE INDEX IF NOT EXISTS idx_actions_type ON actions(action_type);
CREATE INDEX IF NOT EXISTS idx_actions_status ON actions(status);
CREATE INDEX IF NOT EXISTS idx_actions_timestamp ON actions(timestamp);

-- Sources table - Information about intelligence sources
CREATE TABLE IF NOT EXISTS sources (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    type TEXT NOT NULL,         -- api, feed, scanner, etc.
    description TEXT,
    config TEXT,                -- JSON configuration
    enabled BOOLEAN DEFAULT 1,
    last_update DATETIME,
    update_frequency INTEGER,   -- Update frequency in minutes
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Users table - For authentication and action tracking
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    email TEXT NOT NULL,
    role TEXT NOT NULL,         -- admin, analyst, viewer
    last_login DATETIME,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Settings table - Global platform settings
CREATE TABLE IF NOT EXISTS settings (
    key TEXT PRIMARY KEY,
    value TEXT NOT NULL,
    description TEXT,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_by TEXT
);

-- Initial settings
INSERT OR IGNORE INTO settings (key, value, description) 
VALUES 
    ('alert_threshold', '7', 'Minimum severity level to generate alerts'),
    ('auto_block_threshold', '9', 'Minimum severity level to automatically block threats'),
    ('retention_days', '90', 'Number of days to retain threat data'),
    ('email_alerts', 'true', 'Whether to send email alerts');

-- Create view for high severity threats
CREATE VIEW IF NOT EXISTS high_severity_threats AS
SELECT * FROM threats WHERE severity >= 7;
